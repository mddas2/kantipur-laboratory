# Generated by Django 4.1 on 2024-02-21 10:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('management', '0188_alter_sampleform_code'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='testresult',
            name='results',
        ),
        migrations.CreateModel(
            name='HistoricalTestResult',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('formula', models.CharField(blank=True, max_length=255, null=True)),
                ('formula_notation', models.TextField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(max_length=255)),
                ('name_nepali', models.CharField(max_length=255, null=True)),
                ('test_type', models.CharField(choices=[('Chemical', 'Chemical'), ('Instrumental', 'Instrumental'), ('Microbiological', 'Microbiological')], default=None, max_length=155, null=True)),
                ('test_type_nepali', models.CharField(max_length=255, null=True)),
                ('price', models.IntegerField(null=True)),
                ('remarks', models.TextField(max_length=500, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('commodity', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.commodity')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical test result',
                'verbose_name_plural': 'historical test results',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSuperVisorSampleForm',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('test_type', models.CharField(max_length=1000, null=True)),
                ('is_supervisor_sent', models.BooleanField(default=False)),
                ('is_analyst_test', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, choices=[('pending', 'pending'), ('not_assigned', 'not_assigned'), ('processing', 'processing'), ('completed', 'completed'), ('recheck', 'recheck'), ('rejected', 'rejected'), ('not_verified', 'not_verified'), ('not_approved', 'not_approved'), ('Test Completed', 'Test Completed'), ('verified', 'verified')], default='not_assigned', max_length=155, null=True)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('updated_date', models.DateTimeField(blank=True, editable=False)),
                ('remarks', models.CharField(max_length=1000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('sample_form', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.sampleform')),
                ('supervisor_user', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical super visor sample form',
                'verbose_name_plural': 'historical super visor sample forms',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSampleFormVerifier',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_verified', models.BooleanField(default=False)),
                ('is_sent', models.BooleanField(default=False)),
                ('remarks', models.CharField(max_length=1000, null=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('recheck', 'recheck'), ('not_approved', 'not_approved'), ('completed', 'completed')], default='processing', max_length=155)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('updated_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('sample_form', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.sampleform')),
            ],
            options={
                'verbose_name': 'historical sample form verifier',
                'verbose_name_plural': 'historical sample form verifiers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSampleFormParameterFormulaCalculate',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('result', models.FloatField(null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('input_fields_value', models.CharField(max_length=2000, null=True)),
                ('auto_calculate_result', models.CharField(max_length=200, null=True)),
                ('remarks', models.CharField(max_length=200, null=True)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('updated_date', models.DateTimeField(blank=True, editable=False)),
                ('converted_result', models.CharField(max_length=200, null=True)),
                ('analyst_remarks', models.CharField(max_length=2000, null=True)),
                ('decimal_place', models.CharField(max_length=200, null=True)),
                ('units', models.CharField(max_length=200, null=True)),
                ('mandatory_standard', models.CharField(max_length=200, null=True)),
                ('test_method', models.CharField(max_length=200, null=True)),
                ('additional_info', models.CharField(blank=True, max_length=2000, null=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('rejected', 'rejected'), ('recheck', 'recheck'), ('completed', 'completed'), ('tested', 'tested'), ('processing', 'processing')], default='processing', max_length=155)),
                ('is_locked', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('commodity', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.commodity')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parameter', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.testresult')),
                ('sample_form', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.sampleform')),
                ('sample_form_has_parameter', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.sampleformhasparameter')),
            ],
            options={
                'verbose_name': 'historical sample form parameter formula calculate',
                'verbose_name_plural': 'historical sample form parameter formula calculates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSampleFormHasParameter',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_supervisor_sent', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, choices=[('pending', 'pending'), ('processing', 'processing'), ('completed', 'completed'), ('recheck', 'recheck'), ('rejected', 'rejected'), ('not_verified', 'not_verified'), ('tested', 'tested'), ('verified', 'verified')], default='pending', max_length=155, null=True)),
                ('form_available', models.CharField(blank=True, choices=[('superadmin', 'superadmin'), ('smu', 'smu'), ('supervisor', 'supervisor'), ('analyst', 'analyst'), ('user', 'user')], max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('started_date', models.CharField(max_length=30, null=True)),
                ('sample_receipt_condition', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_info', models.CharField(blank=True, max_length=2000, null=True)),
                ('completed_date', models.DateTimeField(null=True)),
                ('sample_received_date', models.CharField(max_length=30, null=True)),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('remarks', models.CharField(max_length=1000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('analyst_user', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('commodity', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.commodity')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('sample_form', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.sampleform')),
                ('super_visor_sample_form', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.supervisorsampleform')),
            ],
            options={
                'verbose_name': 'historical sample form has parameter',
                'verbose_name_plural': 'historical sample form has parameters',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSampleForm',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('owner_user', models.EmailField(default=None, max_length=100)),
                ('name', models.CharField(max_length=255, null=True)),
                ('new_name', models.CharField(max_length=255, null=True)),
                ('condition', models.CharField(max_length=255, null=True)),
                ('mfd', models.CharField(max_length=255, null=True)),
                ('dfb', models.CharField(blank=True, max_length=255, null=True)),
                ('days_dfb', models.CharField(blank=True, max_length=255, null=True)),
                ('dfb_duration', models.CharField(choices=[('days', 'days'), ('month', 'month'), ('year', 'year'), ('', '')], default=None, max_length=155, null=True)),
                ('dfb_type', models.CharField(choices=[('days', 'days'), ('date', 'date'), ('', '')], default=None, max_length=155, null=True)),
                ('batch', models.CharField(max_length=155, null=True)),
                ('brand', models.CharField(max_length=255, null=True)),
                ('purpose', models.CharField(max_length=255, null=True)),
                ('requested_export', models.CharField(max_length=155, null=True)),
                ('report_date', models.DateField(null=True)),
                ('amendments', models.CharField(blank=True, max_length=255, null=True)),
                ('is_commodity_select', models.BooleanField(default=False)),
                ('language', models.CharField(max_length=10)),
                ('note', models.TextField(blank=True, null=True)),
                ('approved_date', models.DateTimeField(null=True)),
                ('completed_date', models.DateTimeField(null=True)),
                ('refrence_number', models.CharField(blank=True, max_length=255, null=True)),
                ('sample_lab_id', models.CharField(blank=True, max_length=255, null=True)),
                ('price', models.IntegerField(null=True)),
                ('sample_units', models.CharField(max_length=1000, null=True)),
                ('sample_type', models.CharField(max_length=1000, null=True)),
                ('sample_quantity', models.CharField(max_length=1000, null=True)),
                ('number_of_sample', models.CharField(max_length=1000, null=True)),
                ('remarks', models.CharField(max_length=1000, null=True)),
                ('admin_remarks', models.CharField(max_length=1000, null=True)),
                ('sample_symbol_number', models.CharField(max_length=255, null=True)),
                ('analysis_fee', models.CharField(max_length=255, null=True)),
                ('voucher_number', models.CharField(max_length=255, null=True)),
                ('voucher_date', models.CharField(max_length=255, null=True)),
                ('verified_date', models.DateTimeField(null=True)),
                ('is_analyst_test', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, choices=[('pending', 'pending'), ('processing', 'processing'), ('not_assigned', 'not_assigned'), ('not_verified', 'not_verified'), ('not_approved', 'not_approved'), ('verified', 'verified'), ('completed', 'completed'), ('recheck', 'recheck'), ('rejected', 'rejected')], max_length=155, null=True)),
                ('form_available', models.CharField(blank=True, choices=[('superadmin', 'superadmin'), ('smu', 'smu'), ('supervisor', 'supervisor'), ('analyst', 'analyst'), ('user', 'user'), ('verifier', 'verifier')], max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('updated_date', models.DateTimeField(blank=True, editable=False)),
                ('analysis_pricing', models.BooleanField(default=False)),
                ('fiscal_year', models.CharField(max_length=55, null=True)),
                ('namuna_code', models.CharField(max_length=55, null=True)),
                ('code', models.IntegerField(null=True)),
                ('is_print', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('client_category_detail', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.clientcategorydetail')),
                ('commodity', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.commodity')),
                ('created_by_user', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner_user_obj', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sample form',
                'verbose_name_plural': 'historical sample forms',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPayment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('owner_email', models.EmailField(max_length=100, null=True)),
                ('voucher_number', models.CharField(blank=True, max_length=155, null=True)),
                ('register_date', models.CharField(blank=True, max_length=155, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('payment_receipt', models.TextField(max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('updated_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner_user', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('sample_form', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.sampleform')),
            ],
            options={
                'verbose_name': 'historical payment',
                'verbose_name_plural': 'historical payments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCommodityCategory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('name_nepali', models.CharField(max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical commodity category',
                'verbose_name_plural': 'historical commodity categorys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCommodity',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('name_nepali', models.CharField(max_length=255, null=True)),
                ('test_duration', models.CharField(max_length=255, null=True)),
                ('units', models.CharField(max_length=255, null=True)),
                ('price', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.commoditycategory')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical commodity',
                'verbose_name_plural': 'historical commoditys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
